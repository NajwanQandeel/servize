[{"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\index.tsx":"1","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\App.tsx":"3","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\store.tsx":"4","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Activate.tsx":"5","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Signup\\Signup.tsx":"6","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Login\\Login.tsx":"7","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Provider-signup\\Provider-signup.tsx":"8","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Forgot-password\\Forgot-password.tsx":"9","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Provider-container\\Provider-container.tsx":"10","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Reset-password\\Reset-password.tsx":"11","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reducers\\rootReducer.tsx":"12","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reducers\\Users\\usersReducer.tsx":"13","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\actions\\Users\\usersActions.tsx":"14","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\actions\\actionTypes.tsx":"15","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Reset-password\\Reset-password-confirm.tsx":"16","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Nav-bar\\Nav-bar.tsx":"17","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\catagories\\Catagories.tsx":"18","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Main-view\\Main-view.tsx":"19","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Footer\\Footer.tsx":"20","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Logout\\Logout.tsx":"21","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Categories-container\\Categories-container.tsx":"22","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Search\\Search.tsx":"23","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Categories-container\\Categories-card.tsx":"24"},{"size":801,"mtime":1607933924603,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1607416899091,"results":"27","hashOfConfig":"26"},{"size":2020,"mtime":1607936345197,"results":"28","hashOfConfig":"26"},{"size":573,"mtime":1607935330932,"results":"29","hashOfConfig":"26"},{"size":1733,"mtime":1607875444539,"results":"30","hashOfConfig":"26"},{"size":3837,"mtime":1607934158049,"results":"31","hashOfConfig":"26"},{"size":4693,"mtime":1607933991602,"results":"32","hashOfConfig":"26"},{"size":8418,"mtime":1607875444544,"results":"33","hashOfConfig":"26"},{"size":2725,"mtime":1607935625425,"results":"34","hashOfConfig":"26"},{"size":745,"mtime":1607933924507,"results":"35","hashOfConfig":"26"},{"size":2145,"mtime":1607935625403,"results":"36","hashOfConfig":"26"},{"size":559,"mtime":1607933924613,"results":"37","hashOfConfig":"26"},{"size":1665,"mtime":1607933924609,"results":"38","hashOfConfig":"26"},{"size":165,"mtime":1607933924461,"results":"39","hashOfConfig":"26"},{"size":41,"mtime":1607766121056,"results":"40","hashOfConfig":"26"},{"size":2143,"mtime":1607875444545,"results":"41","hashOfConfig":"26"},{"size":3004,"mtime":1607936396911,"results":"42","hashOfConfig":"26"},{"size":7843,"mtime":1607519355075,"results":"43","hashOfConfig":"26"},{"size":536,"mtime":1607519355068,"results":"44","hashOfConfig":"26"},{"size":5022,"mtime":1607766121059,"results":"45","hashOfConfig":"26"},{"size":446,"mtime":1607888819680,"results":"46","hashOfConfig":"26"},{"size":4702,"mtime":1607933924501,"results":"47","hashOfConfig":"26"},{"size":2039,"mtime":1607933924576,"results":"48","hashOfConfig":"26"},{"size":1740,"mtime":1607933924481,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"266cig",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"52"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"52"},"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\index.tsx",[],["118","119"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\App.tsx",["120","121","122","123","124","125","126"],"import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\r\nimport Signup from './components/Signup/Signup';\r\nimport Login from './components/Login/Login';\r\nimport Catagories from './components/catagories/Catagories';\r\nimport Profile from './components/profile/Profile';\r\nimport ProviderSignup from './components/Provider-signup/Provider-signup'\r\nimport Navbar from \"./components/Nav-bar/Nav-bar\";\r\nimport Categories from \"./components/Categories-container/Categories-container\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Main from \"./components/Main-view/Main-view\";\r\nimport ForgotPassword from \"./components/Forgot-password/Forgot-password\";\r\nimport ResetPassword from \"./components/Reset-password/Reset-password\";\r\nimport ResetPasswordConfirm from \"./components/Reset-password/Reset-password-confirm\"\r\nimport ProviderContainer from \"./components/Provider-container/Provider-container\";\r\nimport Activate from './components/Activate';\r\nimport Search from \"./components/Search/Search\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n\r\n        <Navbar />\r\n        <Signup />\r\n        <Login />\r\n        {/* <ProviderSignup /> */}\r\n        <Catagories />\r\n        <Search />\r\n\r\n        <Switch>\r\n\r\n          <Route exact path=\"/\" component={Main} /> \r\n          <Route exact path=\"/\" component={Categories} /> \r\n          {/* <Route path=\"/prov/signup\" component={ProviderSignup} />  */}\r\n         <Route path=\"/user/signup\" component={Signup} />\r\n           <Route path=\"/user/login\" component={Login} /> \r\n         {/* <Route path=\"/provider\" component={ProviderContainer} />\r\n          <Route path=\"/auth/users/reset_password/\" component={ForgotPassword} />\r\n          <Route path=\"/reset/:token\" component={ResetPassword} />\r\n          <Route path=\"/activate/:uid/:token\" component={Activate} /> */}\r\n\r\n        </Switch>\r\n\r\n        <Footer/>\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\store.tsx",["127","128","129","130","131"],"import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport thunk from 'redux-thunk';\r\nimport persistedReducer from './reducers/rootReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    // persistedReducer,\r\n    // initialState,\r\n    // compose(\r\n    //     applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // )\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor }","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Activate.tsx",["132"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst axios = require('axios');\r\n\r\nconst Activate = () => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = (e:any) => {\r\n        // e.preventDefault();\r\n        // const uid = props.match.params.uid;\r\n        // const token = props.match.params.token;\r\n\r\n        // props.verify(uid, token);\r\n        // setVerified(true);\r\n        const url = window.location.href;\r\n        const index= url.lastIndexOf(\"/\");\r\n        const uid = url.slice(index+1);\r\n        const token = url.slice(index-2,index);\r\n        console.log(uid, token )\r\n\r\n        let options = {\r\n            url: `http://localhost:8000/auth/users/activation/`,\r\n            method: 'post',\r\n            data: { Uid: uid, Token: token }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(\"axios\", results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n    };\r\n\r\n    if (verified)\r\n        return <Redirect to='/' />\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', marginTop: '200px' }}>\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Activate;",["133","134"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Signup\\Signup.tsx",["135","136","137","138","139","140"],"import React, { useState } from 'react';\r\nimport { appendErrors, useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n// import './Signup.css';\r\n\r\n// import { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\n// import '@fortawesome/fontawesome-free/css/all.min.css';\r\n// import 'bootstrap-css-only/css/bootstrap.min.css';\r\n// import 'mdbreact/dist/css/mdb.css';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\ninterface FormData {\r\n    username: string;\r\n    email: string;\r\n    phone: number;\r\n    password: string;\r\n}\r\nconst Signup = () => {\r\n   \r\n\r\n\r\n    // const openForm= () =>{\r\n    //     document.getElementById(\"signup-form\").style.display = \"block\";\r\n    // }\r\n\r\n    const closeForm = () => {\r\n        //    $(\"signup-form\").style.display = \"none\";\r\n        $(\"#signup-form\").hide();\r\n\r\n    }\r\n    const { register, handleSubmit, errors } = useForm<FormData>();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n\r\n    \r\n    return (\r\n        <div id=\"signup\" className=\"center styled\">\r\n            <form id=\"signup-form\"\r\n                onSubmit={handleSubmit((formData) => {\r\n                    console.log(formData)\r\n                  \r\n                    axios.post(`http://localhost:8000/auth/users/`, {\r\n                        name: formData.username,\r\n                        email: formData.email,\r\n                        password: formData.password,\r\n                       \r\n                    })\r\n\r\n                        .then((result: any) => {\r\n                            console.log(result)\r\n                            window.location.href=\"/user/login\" \r\n\r\n                        })\r\n                        .catch((err: any) => {\r\n                            console.error(\"err===== =>\", err);\r\n                        })\r\n                })}\r\n            >\r\n                <h1>Sign Up</h1>\r\n                <br />\r\n                <div className=\"column\">\r\n                    <label htmlFor=\"username\">User Name:</label>\r\n                    <input type=\"text\" className=\"text\" id=\"username\" name=\"username\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"username error\" ></div>\r\n\r\n                    <label htmlFor=\"email\" >Email:</label>\r\n                    <input type=\"email\" className=\"text\" id=\"email\" name=\"email\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"email error\" ></div>\r\n\r\n                    {/* <label htmlFor=\"phone\" >Phone:</label>\r\n                    <input type=\"text\" className=\"text\" id=\"phone\" name=\"phone\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"phone error\" ></div> */}\r\n\r\n                    <label htmlFor=\"password\" >Password:</label>\r\n                    <input type=\"password\" className=\"text\" id=\"password\" name=\"password\" ref={register({ required: \"required\" })} />\r\n\r\n                    <label htmlFor=\"confirmPassword\" >Confirm Password:</label>\r\n                    <input type=\"password\" className=\"text\" id=\"confirmPassword\" name=\"confirmPassword\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"password error\" ></div>\r\n                </div>\r\n                <br />\r\n\r\n                <button className=\"btn cancel\" onClick={closeForm}>Close</button>\r\n\r\n                <button className=\"button\" >Sign Up</button><br />\r\n\r\n                <div className=\"password-req\" >8 characters or longer. Combine upper and lowercase letters and numbers</div><br />\r\n                <p >Already have an account? <Link to=\"/user/login\" style={{ textDecoration: \"none\" }}>Sign In</Link></p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Login\\Login.tsx",["141","142","143","144","145","146","147","148"],"import React, { useState } from 'react';\r\nimport { appendErrors, useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nconst axios = require('axios');\r\n\r\ninterface formData {\r\n\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport default function Login() {\r\n    const { register, handleSubmit, errors } = useForm<formData>();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState(''); // hooks \r\n    // create state for email and password \r\n    // use setemail\r\n    // use email not formData\r\n    const [access, setAccess] = useState(\"\");\r\n    const [refresh, setRefresh] = useState(\"\");\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form\r\n                        onSubmit={handleSubmit((formData) => {\r\n                            console.log(formData);\r\n\r\n                            axios.post(`http://localhost:8000/auth/jwt/create`,\r\n                                {\r\n                                    email: email,\r\n                                    password: password,\r\n                                })\r\n\r\n                                .then((result: any) => {\r\n                                    console.log(result)\r\n                                    setAccess(result.data.access);\r\n                                    setRefresh(result.data.refresh);\r\n                                    // window.location.href=\"/\"\r\n\r\n                                })\r\n                                .catch((err: any) => {\r\n                                    console.error(\"err===== =>\", err);\r\n                                })\r\n\r\n                            \r\n                            console.log('hay heeeeeeeeeee:',access);\r\n\r\n                           \r\n                            async function getData() {\r\n                                try {\r\n                                   let res = await axios({\r\n                                        url: 'http://localhost:8000/auth/users/me/',\r\n                                        method: 'get',\r\n                                        timeout: 8000,\r\n                                        headers: {\r\n                                            'Authorization': 'JWT '+ access,\r\n                                            'Content-Type': 'application/json',\r\n                                        }\r\n                                    })\r\n                                    if(res.status == 200){\r\n                                        // test for status you want, etc\r\n                                        console.log(res.status)\r\n                                        localStorage.setItem(\"access_token\", access);\r\n                                        localStorage.setItem(\"refresh_token\", refresh);\r\n                                    }    \r\n                                    // Don't forget to return something\r\n                                   \r\n                                    return res.data\r\n                                }\r\n                                catch (err) {\r\n                                    console.error(err);\r\n                                }\r\n                            }\r\n                            \r\n                            getData()\r\n                            .then(res => console.log(res))\r\n                            \r\n\r\n                        })}\r\n                    >\r\n                        <p className=\"h5 text-center mb-4\">Log in</p>\r\n                        <div className=\"grey-text\">\r\n                            <MDBInput placeholder=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" value={email} onChange={(e: any) => { setEmail(e.target.value)}} />\r\n                            <MDBInput placeholder=\"Type your password\" icon=\"lock\" group type=\"password\" validate error=\"wrong\" success=\"right\" value={password} onChange={(e: any) => setPassword(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <MDBBtn type=\"submit\" disabled={submitting}>Log in</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Provider-signup\\Provider-signup.tsx",["149","150","151","152","153","154","155","156","157","158","159"],"import React, { useState } from 'react';\r\nimport { appendErrors, useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nconst axios = require('axios');\r\n\r\ninterface FormData {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    re_password: string;\r\n    city: string;\r\n    phone: number;\r\n}\r\n\r\nconst ProviderSignup = () => {\r\n    const { register, handleSubmit, errors } = useForm<FormData>();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n\r\n    return (\r\n        <div id=\"signup\" className=\"center styled\">\r\n            <form id=\"signup-form\"\r\n                onSubmit={handleSubmit((formData) => {\r\n                    console.log(formData)\r\n                    // let options = {\r\n                    //     url: `http://localhost:8000/auth/users/`,\r\n                    //     method: 'post',\r\n                    //     data: {\r\n                    //         name: formData.name,\r\n                    //         email: formData.email,\r\n                    //         password: formData.password,\r\n                    //         re_password: formData.re_password,\r\n                    //         Phone: formData.phone,\r\n                    //         city: formData.city,\r\n                    //     }\r\n                    // }\r\n\r\n                    // axios(options)\r\n                    //     .then((results: any) => {\r\n                    //         console.log(\"axios\", results);\r\n\r\n                    //     })\r\n                    //     .catch((err: any) => {\r\n                    //         console.error(\"err===== =>\", err);\r\n                    //     })\r\n\r\n                    axios.post(`http://localhost:8000/auth/users/`, {\r\n                        name: formData.name,\r\n                        email: formData.email,\r\n                        password: formData.password,\r\n                        re_password: formData.password\r\n                    })\r\n\r\n                        .then((result: any) => {\r\n                            console.log(result)\r\n\r\n                        })\r\n                        .catch((err: any) => {\r\n                            console.error(\"err===== =>\", err);\r\n                        })\r\n\r\n                })}\r\n            >\r\n                <h1>Provider Sign Up</h1>\r\n                <br />\r\n                <div className=\"column\">\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input type=\"text\" className=\"text\" id=\"name\" name=\"name\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"name error\" ></div>\r\n\r\n                    <label htmlFor=\"email\" >Email:</label>\r\n                    <input type=\"email\" className=\"text\" id=\"email\" name=\"email\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"email error\" ></div>\r\n\r\n                    <label htmlFor=\"phone\" >Phone:</label>\r\n                    <input type=\"text\" className=\"text\" id=\"phone\" name=\"phone\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"phone error\" ></div>\r\n\r\n                    <label htmlFor=\"city\" >City:</label>\r\n                    <input type=\"text\" className=\"text\" id=\"city\" name=\"city\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"city error\" ></div>\r\n\r\n                    <label htmlFor=\"password\" >Password:</label>\r\n                    <input type=\"password\" className=\"text\" id=\"password\" name=\"password\" ref={register({ required: \"required\" })} />\r\n\r\n                    <label htmlFor=\"re_password\" >Confirm Password:</label>\r\n                    <input type=\"password\" className=\"text\" id=\"re_password\" name=\"re_password\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"password error\" ></div>\r\n                </div>\r\n                <br />\r\n\r\n                <div className=\"password-req\" >8 characters or longer. Combine upper and lowercase letters and numbers</div><br />\r\n                <p >Already have an account? <Link to=\"/user/login\" style={{ textDecoration: \"none\" }}>Sign In</Link></p>\r\n                <button className=\"button\" >Sign Up</button><br />\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProviderSignup;\r\n\r\n\r\n\r\n// export default function Provider() {\r\n//     const { register, handleSubmit, errors } = useForm<FormData>();\r\n//     const [submitting, setSubmitting] = useState<boolean>(false);\r\n//     const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n//     const [title, setTitle] = useState('');\r\n//     console.log(\"title\", title)\r\n\r\n//     return <form \r\n//         onSubmit={handleSubmit((FormData) => {\r\n//             setSubmitting(true);\r\n//             setServerErrors([]);\r\n\r\n//             // console.log(FormData, \"FormData\");\r\n\r\n//             // const response = fetch('http://localhost:3000/servize', {\r\n//             //     method: \"POST\",\r\n//             //     headers: {\r\n//             //         \"Content-Type\": \"application/json\",\r\n//             //     },\r\n//             //     body: JSON.stringify({\r\n//             //         name: FormData.name,\r\n//             //         email: FormData.email,\r\n//             //         password: FormData.password,\r\n//             //         Phone: FormData.phone,\r\n//             //         city: FormData.city,\r\n//             //         terms: FormData.terms,\r\n//             //     }),\r\n//             // });\r\n//             // const data = await response.json();\r\n//             // console.log(data, \"server data\");\r\n\r\n//             // setSubmitting(false);\r\n//         })} \r\n//         >\r\n//         <p className=\"h5 text-center mb-4\">Register Providers</p>\r\n//         <div className=\"grey-text\"></div>\r\n\r\n//         <MDBContainer>\r\n//             <MDBRow>\r\n//                 <MDBCol md=\"6\">\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"name\">Name</label>\r\n//                         <MDBInput name=\"name\" id=\"name\" group type=\"text\" validate onChange={(e: any) => setTitle(e.target.value)} />\r\n//                         {errors.name ? <div>{errors.name.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"email\" >Email</label>\r\n//                         <MDBInput name=\"email\" id=\"email\" group type=\"email\" validate />\r\n//                         {errors.email ? <div>{errors.email.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"password\">Password</label>\r\n//                         <MDBInput name=\"password\" id=\"password\" group type=\"password\" validate />\r\n//                         {errors.password ? <div>{errors.password.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"phone\">Phone-no</label>\r\n//                         <MDBInput name=\"phone\" id=\"phone\" group type=\"phone\" validate />\r\n//                         {errors.phone ? <div>{errors.phone.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"city\">City</label>\r\n//                         <MDBInput name=\"city\" id=\"city\" group type=\"text\" validate />\r\n//                         {errors.city ? <div>{errors.city.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"terms\">You must agree our terms</label>\r\n//                         <MDBInput group type=\"checkbox\" name=\"terms\" id=\"terms\" validate />\r\n//                         {errors.terms ? <div>{errors.terms.message}</div> : null}\r\n//                     </div>\r\n//                     <br></br>\r\n//                     <br></br>\r\n\r\n//                     <div className=\"text-center\">\r\n//                         <MDBBtn type=\"submit\" disabled={submitting}>Register</MDBBtn>\r\n//                     </div>\r\n\r\n//                 </MDBCol>\r\n//             </MDBRow>\r\n//         </MDBContainer>\r\n//     </form>;\r\n// }\r\n\r\n",["160","161"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Forgot-password\\Forgot-password.tsx",["162"],"import { store } from '../../actions/Users/usersActions';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// import './ForgotPassword.css';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\nconst ForgotPassword = ()=>{ \r\n    \r\n    const dispatch = useDispatch();\r\n    const userInStore = useSelector((state: any) => state.user);\r\n    console.log (\"rootstore\",userInStore)\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        let input = $('#forgot-form').serializeArray();\r\n        // console.log(input[0].value);\r\n        // const [email, setEmail] = useState(\"\") \r\n        dispatch(store(input))\r\n        // setEmail(\"\");\r\n\r\n        let options = {\r\n            url: `http://localhost:3000/auth/users/reset_password/`,\r\n            method: 'post',\r\n            data: { email: input[0].value }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n\r\n        try {\r\n            const serializedState = localStorage.getItem(\"state\");\r\n            if (serializedState === null) {\r\n                return undefined\r\n            }\r\n            return { user: JSON.parse(serializedState) }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            return;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div id=\"reset\">\r\n            <button ><Link to=\"/\">Return To Home Page</Link> </button>\r\n            <form className=\"forgot-form\" id=\"forgot-form\" onSubmit={ handleSubmit}>\r\n                <h1>Forgot Password</h1>\r\n                <br />\r\n                <div className=\"\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" className=\"text\" id=\"email\" name=\"email\"/>\r\n                </div>\r\n                <br />\r\n                <button className=\"button\" >Reset Password</button><br />\r\n\r\n                <p>Back to <Link to=\"/signin\" >Sign In</Link></p>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Provider-container\\Provider-container.tsx",["163","164"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Reset-password\\Reset-password.tsx",["165","166"],"\r\n// import { showSign } from '../actions/actions.js';\r\n// import './NewPassword.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport React from 'react';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\n\r\nconst ResetPassword = () => {\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        // console.log(\"hi\");\r\n        let input = $('#reset-form').serializeArray();\r\n        console.log(input);\r\n\r\n        let options = {\r\n            url: `http://localhost:3000/user/reset/:token`,\r\n            method: 'post',\r\n            // data: { email: input[0].value }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n    }   \r\n\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form className=\"reset-form\" id=\"reset-form\" onSubmit={handleSubmit}>\r\n                        <p className=\"h4 text-center mb-4\">Reset Password</p>\r\n                        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                            New Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginEmailEx\" className=\"form-control\" />\r\n                        <br />\r\n                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                            Confirm Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginPasswordEx\" className=\"form-control\" />\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"indigo\" type=\"submit\">Update</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reducers\\rootReducer.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reducers\\Users\\usersReducer.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\actions\\Users\\usersActions.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\actions\\actionTypes.tsx",[],["167","168"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Reset-password\\Reset-password-confirm.tsx",["169","170"],"// import { showSign } from '../actions/actions.js';\r\n// import './NewPassword.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport React from 'react';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\n\r\nconst ResetPassword = () => {\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        // console.log(\"hi\");\r\n        let input = $('#reset-form').serializeArray();\r\n        console.log(input);\r\n\r\n        let options = {\r\n            url: `http://localhost:3000/user/reset/:token`,\r\n            method: 'post',\r\n            // data: { email: input[0].value }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n    }   \r\n\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form className=\"reset-form\" id=\"reset-form\" onSubmit={handleSubmit}>\r\n                        <p className=\"h4 text-center mb-4\">Reset Password</p>\r\n                        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                            New Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginEmailEx\" className=\"form-control\" />\r\n                        <br />\r\n                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                            Confirm Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginPasswordEx\" className=\"form-control\" />\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"indigo\" type=\"submit\">Update</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n",["171","172"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Nav-bar\\Nav-bar.tsx",["173","174","175"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./Nav-bar.css\";\r\n// import Logout from '../Logout/Logout';\r\nconst $ = require(\"jquery\");\r\n\r\n$(window).on(\"scroll\", function () {\r\n  if ($(window).scrollTop()) {\r\n    $(\"nav\").addClass(\"black\");\r\n  } else {\r\n    $(\"nav\").removeClass(\"black\");\r\n  }\r\n});\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <header id=\"nav-bar\">\r\n      <nav>\r\n        <div className=\"menu-icon\">\r\n          <i className=\"fa fa-bars fa-2x\"></i>\r\n        </div>\r\n        <div className=\"logo\">\r\n          <Link to=\"/\">Servize</Link>\r\n        </div>\r\n        <div className=\"menu\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">How it Works</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Browse Jobs</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Language</a>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/prov/signup\">Become a Service Provider</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/user/login\">Log In</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/user/signup\">Join</Link>\r\n            </li>\r\n            <li>\r\n              <Button\r\n                onClick={() => {\r\n                  localStorage.clear();\r\n                  window.location.href = \"/\";\r\n                }}\r\n                id=\"logout\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n    // <nav className=\"navbar navbar-expand-lg navbar-dark indigo\">\r\n    //     <a className=\"navbar-brand\" href=\"#\">Navbar w/ text</a>\r\n    //     <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\r\n    //         aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    //         <span className=\"navbar-toggler-icon\"></span>\r\n    //     </button>\r\n    //     <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n    //         <ul className=\"navbar-nav mr-auto\">\r\n    //             <li className=\"nav-item active\">\r\n    //                 <a className=\"nav-link\" href=\"#\">Home\r\n    //     <span className=\"sr-only\">(current)</span>\r\n    //                 </a>\r\n    //             </li>\r\n    //             <li className=\"nav-item\">\r\n    //                 <a className=\"nav-link\" href=\"#\">Features</a>\r\n    //             </li>\r\n    //             <li className=\"nav-item\">\r\n    //                 <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n    //             </li>\r\n    //         </ul>\r\n    //         <span className=\"navbar-text white-text\">\r\n    //             Navbar text with an inline element\r\n    //     </span>\r\n    //     </div>\r\n    // </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\catagories\\Catagories.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Main-view\\Main-view.tsx",["176"],"import React from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Main-view.css';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"img-container\">\r\n            <img className=\"main-img\" src=\"https://www.saga.co.uk/contentlibrary/saga/publishing/verticals/home-and-garden/home-and-interiors/how-to-guides/builders/avoid-cowboy-builders.jpg\"></img>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Main;","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Footer\\Footer.tsx",["177","178","179","180"],"import React from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer id=\"footer\" className=\"page-footer font-small mdb-color pt-4\">\r\n\r\n            <div className=\"container text-center text-md-left\">\r\n\r\n                <div className=\"row text-center text-md-left mt-3 pb-3\">\r\n\r\n                    <div className=\"col-md-3 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Company name</h6>\r\n                        <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\r\n                        consecteturadipisicing elit.</p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-2 col-lg-2 col-xl-2 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Categories</h6>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">About</h6>\r\n                        <p>\r\n                            <a href=\"#!\">Terms of Service</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Privacy Policy</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Partnerships</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Help</a>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Apps</h6>\r\n                        <p>\r\n                            <i className=\"fas fa-home mr-3\"></i> App store</p>\r\n                        \r\n                        <p>\r\n                            <i className=\"fas fa-print mr-3\"></i> Google Play</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"row d-flex align-items-center\">\r\n\r\n                    <div className=\"col-md-7 col-lg-8\">\r\n\r\n                        <p className=\"text-center text-md-left\">© 2020 Copyright:\r\n                            <a href=\"https://mdbootstrap.com/\">\r\n                                <strong> servize.com</strong>\r\n                            </a>\r\n                        </p>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-5 col-lg-4 ml-lg-0\">\r\n\r\n                        <div className=\"text-center text-md-right\">\r\n                            <ul className=\"list-unstyled list-inline\">\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-facebook-f\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-twitter\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-google-plus-g\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-linkedin-in\"></i>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>                 \r\n                </div>               \r\n            </div>             \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Logout\\Logout.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Categories-container\\Categories-container.tsx",["181","182","183","184","185","186","187","188"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { store } from '../../actions/Users/usersActions';\r\nimport CategoriesCard from \"./Categories-card\";\r\n// import '@fortawesome/fontawesome-free/css/all.min.css';\r\n// import 'bootstrap-css-only/css/bootstrap.min.css';\r\n// import 'mdbreact/dist/css/mdb.css';\r\nimport './Categories-card.css';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\n\r\n\r\nconst Categories = () => {\r\n    const userInStore = useSelector((state: any) => state.user);\r\n    const dispatch = useDispatch();\r\n    console.log(\"store ===> \", userInStore)\r\n    // axios.get(`http://localhost:8000/category/`)\r\n\r\n    //     .then((result: any) => {\r\n    //         console.log(\"axios\", result.data)\r\n    //         dispatch(store(result.data))\r\n\r\n    //     })\r\n    //     .catch((err: any) => {\r\n    //         console.error(\"err===== =>\", err);\r\n    //     })\r\n\r\n    // }, [userInStore])\r\n\r\n    if (userInStore !== undefined) {\r\n        return (\r\n            <div className=\"list\">\r\n                {userInStore.map((user: any, index: any) =>\r\n                    <CategoriesCard\r\n                        key={index}\r\n                        user={user}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"list\">\r\n                {/* <h1>Hello</h1> */}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    // <div id=\"cat-img\" className=\"carousel slide carousel-multi-item\" data-ride=\"carousel\">\r\n\r\n\r\n    //  <div className=\"controls-top\">\r\n    //         <a className=\"btn-floating\" href=\"#multi-item-example\" data-slide=\"prev\"><i className=\"fa fa-chevron-left\"></i></a>\r\n    //         <a className=\"btn-floating\" href=\"#multi-item-example\" data-slide=\"next\"><i className=\"fa fa-chevron-right\"></i></a>\r\n    //     </div> \r\n\r\n\r\n\r\n    // <ol className=\"carousel-indicators\">\r\n    //     <li data-target=\"#multi-item-example\" data-slide-to=\"0\" className=\"active\"></li>\r\n    //     <li data-target=\"#multi-item-example\" data-slide-to=\"1\"></li>\r\n    //     <li data-target=\"#multi-item-example\" data-slide-to=\"2\"></li>\r\n    // </ol> \r\n\r\n\r\n    //    <div className=\"carousel-item\">\r\n\r\n    //         <div className=\"row\">\r\n\r\n    //             <div className=\"col-md-3\">\r\n    //                 <div className=\"card mb-2\">\r\n    //                     <img className=\"card-img-top\" src=\"https://mdbootstrap.com/img/Photos/Horizontal/Food/4-col/img%20(53).jpg\"\r\n    //                         alt=\"Card image cap\" />\r\n    //                     <div className=\"card-body\">\r\n    //                         <h4 className=\"card-title\">Card title</h4>\r\n    //                         <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the\r\n    //         card's content.</p>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </div>\r\n\r\n    //             <div className=\"col-md-3 d-none d-md-block\">\r\n    //                 <div className=\"card mb-2\">\r\n    //                     <img className=\"card-img-top\" src=\"https://picsum.photos/seed/picsum/200/160\"\r\n    //                         alt=\"Card image cap\" />\r\n    //                     <div className=\"card-body\">\r\n    //                         <h4 className=\"card-title\">Card title</h4>\r\n    //                         <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the\r\n    //         card's content.</p>\r\n    //                         <a className=\"btn btn-primary\">Button</a>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </div>\r\n\r\n    //             <Link to=\"/provider\">\r\n    //                 <div className=\"tset\" onClick={handleClick}>\r\n    //                     <div className=\"\">\r\n    //                         <a className=\"\" >\r\n    //                         <Link to=\"/provider\">\r\n    //                             <h4 className=\"\">Card title</h4>\r\n    //                         </Link> \r\n    //                             <p className=\"\">Some quick example text to build on the card title and make up the bulk of the\r\n    //             card's content.</p>\r\n\r\n    //                             <img className=\"\" src=\"\"\r\n    //                                 alt=\"Card image cap\" />\r\n    //                         </a>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </Link>\r\n\r\n    //         </div>\r\n\r\n    //     </div>\r\n\r\n\r\n\r\n    // </div>\r\n    // );\r\n}\r\n\r\nexport default Categories;","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Search\\Search.tsx",["189","190","191","192","193","194"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { store } from '../../actions/Users/usersActions';\r\nimport './Search.css';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\nconst Search = () => {\r\n    const userInStore = useSelector((state: any) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    // const [cat, setCat] = useState(false);\r\n    // const [city, setCity] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        axios.post(`http://localhost:8000/`)    // sending data\r\n\r\n            .then((result: any) => {\r\n                console.log(\"axios\", result.data)\r\n                // dispatch(store(result.data))\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n    }\r\n\r\n    return (\r\n       \r\n\r\n\r\n        <div>\r\n            <input type=\"text\" placeholder=\"search..\"></input>\r\n\r\n            <div className=\"dropdown\">\r\n                {/* <button className=\"dropbtn\" onClick={()=>{setCat(!cat)}}>Category</button> */}\r\n                <select className=\"dropdown-cat\">\r\n                    <option>Cat 1</option>\r\n                    <option>Cat 2</option>\r\n                    <option>Cat 3</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"dropdown\">\r\n                {/* <button className=\"dropbtn\" onClick={()=>{setCity(!city)}}>City</button> */}\r\n                <select className=\"dropdown-city\">\r\n                    <option>City 1</option>\r\n                    <option>City 2</option>\r\n                    <option>City 3</option>\r\n                    <option>City 4</option>\r\n                    <option>City 5</option>\r\n                    <option>City 6</option>\r\n                    \r\n                    \r\n                </select>\r\n            </div>\r\n            <button onClick={handleClick}>Submit</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Categories-container\\Categories-card.tsx",["195","196","197","198","199","200"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { store } from '../../actions/Users/usersActions';\r\nimport SubCategories from \"./subCategories\";\r\nimport './Categories-card.css';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\n\r\n\r\nconst CategoriesCard = ({ user }: { user: any }) => {\r\n    const userInStore = useSelector((state: any) => state.user);\r\n    const dispatch = useDispatch();\r\n    // console.log(\"hi\", user)\r\n    const handleClick = () => {\r\n        axios.get(`http://localhost:8000/category/`)\r\n\r\n        .then((result: any) => {\r\n            console.log(\"axios\", result.data)\r\n            dispatch(store(result.data))\r\n\r\n        })\r\n        .catch((err: any) => {\r\n            console.error(\"err===== =>\", err);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"card\" style={{ display: \"flex\" }}>\r\n            <img src={user.catImage} alt=\"Avatar\" />\r\n            <div className=\"container\">\r\n                <   h4><b>{user.catName}</b></h4>\r\n                {/* <p>Architect Engineer</p> */}\r\n\r\n                <button onClick={handleClick}>\r\n                    <Link to=\"/provider\">Learn More</Link>\r\n                </button>\r\n\r\n                {/* <SubCategories user={user.subCategories} /> */}\r\n            </div>\r\n\r\n            {/* <div className=\"list\">\r\n                {userInStore.subCategories.map((user: any, index: any) =>\r\n                    <SubCategories\r\n                        key={index}\r\n                        user={user}\r\n                    />\r\n                )}\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CategoriesCard;",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":15},{"ruleId":"205","severity":1,"message":"209","line":7,"column":8,"nodeType":"207","messageId":"208","endLine":7,"endColumn":22},{"ruleId":"205","severity":1,"message":"210","line":12,"column":8,"nodeType":"207","messageId":"208","endLine":12,"endColumn":22},{"ruleId":"205","severity":1,"message":"211","line":13,"column":8,"nodeType":"207","messageId":"208","endLine":13,"endColumn":21},{"ruleId":"205","severity":1,"message":"212","line":14,"column":8,"nodeType":"207","messageId":"208","endLine":14,"endColumn":28},{"ruleId":"205","severity":1,"message":"213","line":15,"column":8,"nodeType":"207","messageId":"208","endLine":15,"endColumn":25},{"ruleId":"205","severity":1,"message":"214","line":16,"column":8,"nodeType":"207","messageId":"208","endLine":16,"endColumn":16},{"ruleId":"205","severity":1,"message":"215","line":1,"column":23,"nodeType":"207","messageId":"208","endLine":1,"endColumn":38},{"ruleId":"205","severity":1,"message":"216","line":1,"column":40,"nodeType":"207","messageId":"208","endLine":1,"endColumn":47},{"ruleId":"205","severity":1,"message":"217","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":24},{"ruleId":"205","severity":1,"message":"218","line":6,"column":7,"nodeType":"207","messageId":"208","endLine":6,"endColumn":19},{"ruleId":"205","severity":1,"message":"219","line":8,"column":7,"nodeType":"207","messageId":"208","endLine":8,"endColumn":17},{"ruleId":"205","severity":1,"message":"220","line":6,"column":22,"nodeType":"207","messageId":"208","endLine":6,"endColumn":33},{"ruleId":"201","replacedBy":"221"},{"ruleId":"203","replacedBy":"222"},{"ruleId":"205","severity":1,"message":"223","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":22},{"ruleId":"205","severity":1,"message":"224","line":32,"column":37,"nodeType":"207","messageId":"208","endLine":32,"endColumn":43},{"ruleId":"205","severity":1,"message":"225","line":33,"column":12,"nodeType":"207","messageId":"208","endLine":33,"endColumn":22},{"ruleId":"205","severity":1,"message":"226","line":33,"column":24,"nodeType":"207","messageId":"208","endLine":33,"endColumn":37},{"ruleId":"205","severity":1,"message":"227","line":34,"column":12,"nodeType":"207","messageId":"208","endLine":34,"endColumn":24},{"ruleId":"205","severity":1,"message":"228","line":34,"column":26,"nodeType":"207","messageId":"208","endLine":34,"endColumn":41},{"ruleId":"205","severity":1,"message":"223","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":22},{"ruleId":"205","severity":1,"message":"229","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":14},{"ruleId":"205","severity":1,"message":"230","line":18,"column":13,"nodeType":"207","messageId":"208","endLine":18,"endColumn":21},{"ruleId":"205","severity":1,"message":"224","line":18,"column":37,"nodeType":"207","messageId":"208","endLine":18,"endColumn":43},{"ruleId":"205","severity":1,"message":"226","line":19,"column":24,"nodeType":"207","messageId":"208","endLine":19,"endColumn":37},{"ruleId":"205","severity":1,"message":"227","line":20,"column":12,"nodeType":"207","messageId":"208","endLine":20,"endColumn":24},{"ruleId":"205","severity":1,"message":"228","line":20,"column":26,"nodeType":"207","messageId":"208","endLine":20,"endColumn":41},{"ruleId":"231","severity":1,"message":"232","line":68,"column":51,"nodeType":"233","messageId":"234","endLine":68,"endColumn":53},{"ruleId":"205","severity":1,"message":"223","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":22},{"ruleId":"205","severity":1,"message":"235","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":22},{"ruleId":"205","severity":1,"message":"236","line":4,"column":24,"nodeType":"207","messageId":"208","endLine":4,"endColumn":30},{"ruleId":"205","severity":1,"message":"237","line":4,"column":32,"nodeType":"207","messageId":"208","endLine":4,"endColumn":38},{"ruleId":"205","severity":1,"message":"238","line":4,"column":40,"nodeType":"207","messageId":"208","endLine":4,"endColumn":46},{"ruleId":"205","severity":1,"message":"239","line":4,"column":48,"nodeType":"207","messageId":"208","endLine":4,"endColumn":56},{"ruleId":"205","severity":1,"message":"224","line":20,"column":37,"nodeType":"207","messageId":"208","endLine":20,"endColumn":43},{"ruleId":"205","severity":1,"message":"225","line":21,"column":12,"nodeType":"207","messageId":"208","endLine":21,"endColumn":22},{"ruleId":"205","severity":1,"message":"226","line":21,"column":24,"nodeType":"207","messageId":"208","endLine":21,"endColumn":37},{"ruleId":"205","severity":1,"message":"227","line":22,"column":12,"nodeType":"207","messageId":"208","endLine":22,"endColumn":24},{"ruleId":"205","severity":1,"message":"228","line":22,"column":26,"nodeType":"207","messageId":"208","endLine":22,"endColumn":41},{"ruleId":"201","replacedBy":"240"},{"ruleId":"203","replacedBy":"241"},{"ruleId":"205","severity":1,"message":"242","line":2,"column":17,"nodeType":"207","messageId":"208","endLine":2,"endColumn":25},{"ruleId":"205","severity":1,"message":"243","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":20},{"ruleId":"205","severity":1,"message":"244","line":5,"column":11,"nodeType":"207","messageId":"208","endLine":5,"endColumn":19},{"ruleId":"205","severity":1,"message":"229","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":14},{"ruleId":"205","severity":1,"message":"245","line":4,"column":16,"nodeType":"207","messageId":"208","endLine":4,"endColumn":24},{"ruleId":"201","replacedBy":"246"},{"ruleId":"203","replacedBy":"247"},{"ruleId":"205","severity":1,"message":"229","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":14},{"ruleId":"205","severity":1,"message":"245","line":3,"column":16,"nodeType":"207","messageId":"208","endLine":3,"endColumn":24},{"ruleId":"201","replacedBy":"248"},{"ruleId":"203","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":32,"column":15,"nodeType":"252","endLine":32,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":35,"column":15,"nodeType":"252","endLine":35,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":38,"column":15,"nodeType":"252","endLine":38,"endColumn":27},{"ruleId":"253","severity":1,"message":"254","line":10,"column":13,"nodeType":"252","endLine":10,"endColumn":193},{"ruleId":"250","severity":1,"message":"255","line":89,"column":37,"nodeType":"252","endLine":89,"endColumn":95},{"ruleId":"250","severity":1,"message":"255","line":94,"column":37,"nodeType":"252","endLine":94,"endColumn":95},{"ruleId":"250","severity":1,"message":"255","line":99,"column":37,"nodeType":"252","endLine":99,"endColumn":95},{"ruleId":"250","severity":1,"message":"255","line":104,"column":37,"nodeType":"252","endLine":104,"endColumn":95},{"ruleId":"205","severity":1,"message":"242","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"256","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"229","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"245","line":2,"column":16,"nodeType":"207","messageId":"208","endLine":2,"endColumn":24},{"ruleId":"205","severity":1,"message":"257","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":15},{"ruleId":"205","severity":1,"message":"258","line":10,"column":7,"nodeType":"207","messageId":"208","endLine":10,"endColumn":12},{"ruleId":"205","severity":1,"message":"259","line":11,"column":7,"nodeType":"207","messageId":"208","endLine":11,"endColumn":8},{"ruleId":"205","severity":1,"message":"244","line":17,"column":11,"nodeType":"207","messageId":"208","endLine":17,"endColumn":19},{"ruleId":"205","severity":1,"message":"242","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"229","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"257","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":15},{"ruleId":"205","severity":1,"message":"259","line":7,"column":7,"nodeType":"207","messageId":"208","endLine":7,"endColumn":8},{"ruleId":"205","severity":1,"message":"260","line":10,"column":11,"nodeType":"207","messageId":"208","endLine":10,"endColumn":22},{"ruleId":"205","severity":1,"message":"244","line":11,"column":11,"nodeType":"207","messageId":"208","endLine":11,"endColumn":19},{"ruleId":"205","severity":1,"message":"242","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"256","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"245","line":2,"column":16,"nodeType":"207","messageId":"208","endLine":2,"endColumn":24},{"ruleId":"205","severity":1,"message":"261","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":21},{"ruleId":"205","severity":1,"message":"259","line":8,"column":7,"nodeType":"207","messageId":"208","endLine":8,"endColumn":8},{"ruleId":"205","severity":1,"message":"260","line":13,"column":11,"nodeType":"207","messageId":"208","endLine":13,"endColumn":22},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"@typescript-eslint/no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'ProviderSignup' is defined but never used.","'ForgotPassword' is defined but never used.","'ResetPassword' is defined but never used.","'ResetPasswordConfirm' is defined but never used.","'ProviderContainer' is defined but never used.","'Activate' is defined but never used.","'applyMiddleware' is defined but never used.","'compose' is defined but never used.","'persistedReducer' is defined but never used.","'initialState' is assigned a value but never used.","'middleware' is assigned a value but never used.","'setVerified' is assigned a value but never used.",["262"],["263"],"'appendErrors' is defined but never used.","'errors' is assigned a value but never used.","'submitting' is assigned a value but never used.","'setSubmitting' is assigned a value but never used.","'serverErrors' is assigned a value but never used.","'setServerErrors' is assigned a value but never used.","'Link' is defined but never used.","'register' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBBtn' is defined but never used.","'MDBInput' is defined but never used.",["262"],["263"],"'useState' is defined but never used.","'ProviderCard' is defined but never used.","'dispatch' is assigned a value but never used.","'Redirect' is defined but never used.",["262"],["263"],["262"],["263"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'store' is defined but never used.","'axios' is assigned a value but never used.","'$' is assigned a value but never used.","'userInStore' is assigned a value but never used.","'SubCategories' is defined but never used.","no-global-assign","no-unsafe-negation"]