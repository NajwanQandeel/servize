[{"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\index.tsx":"1","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\App.tsx":"3","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\store.tsx":"4","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Activate.tsx":"5","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Signup\\Signup.tsx":"6","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Login\\Login.tsx":"7","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Provider-signup\\Provider-signup.tsx":"8","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Forgot-password\\Forgot-password.tsx":"9","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Provider-container\\Provider-container.tsx":"10","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Reset-password\\Reset-password.tsx":"11","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reducers\\rootReducer.tsx":"12","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reducers\\Users\\usersReducer.tsx":"13","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\actions\\Users\\usersActions.tsx":"14","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\actions\\actionTypes.tsx":"15","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Reset-password\\Reset-password-confirm.tsx":"16","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Nav-bar\\Nav-bar.tsx":"17","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\catagories\\Catagories.tsx":"18","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Main-view\\Main-view.tsx":"19","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Footer\\Footer.tsx":"20","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Logout\\Logout.tsx":"21","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Categories-container\\Categories-container.tsx":"22","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Search\\Search.tsx":"23","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Categories-container\\Categories-card.tsx":"24"},{"size":801,"mtime":1607933924603,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1607416899091,"results":"27","hashOfConfig":"26"},{"size":2498,"mtime":1607935851138,"results":"28","hashOfConfig":"26"},{"size":573,"mtime":1607935330932,"results":"29","hashOfConfig":"26"},{"size":1733,"mtime":1607875444539,"results":"30","hashOfConfig":"26"},{"size":3837,"mtime":1607934158049,"results":"31","hashOfConfig":"26"},{"size":4693,"mtime":1607933991602,"results":"32","hashOfConfig":"26"},{"size":8418,"mtime":1607875444544,"results":"33","hashOfConfig":"26"},{"size":2725,"mtime":1607935625425,"results":"34","hashOfConfig":"26"},{"size":745,"mtime":1607933924507,"results":"35","hashOfConfig":"26"},{"size":2145,"mtime":1607935625403,"results":"36","hashOfConfig":"26"},{"size":559,"mtime":1607933924613,"results":"37","hashOfConfig":"26"},{"size":1665,"mtime":1607933924609,"results":"38","hashOfConfig":"26"},{"size":165,"mtime":1607933924461,"results":"39","hashOfConfig":"26"},{"size":41,"mtime":1607766121056,"results":"40","hashOfConfig":"26"},{"size":2143,"mtime":1607875444545,"results":"41","hashOfConfig":"26"},{"size":5302,"mtime":1607935625415,"results":"42","hashOfConfig":"26"},{"size":7843,"mtime":1607519355075,"results":"43","hashOfConfig":"26"},{"size":536,"mtime":1607519355068,"results":"44","hashOfConfig":"26"},{"size":5022,"mtime":1607766121059,"results":"45","hashOfConfig":"26"},{"size":446,"mtime":1607888819680,"results":"46","hashOfConfig":"26"},{"size":4702,"mtime":1607933924501,"results":"47","hashOfConfig":"26"},{"size":2039,"mtime":1607933924576,"results":"48","hashOfConfig":"26"},{"size":1740,"mtime":1607933924481,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"266cig",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\index.tsx",[],["109","110"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\App.tsx",["111"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\store.tsx",["112","113","114","115","116"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Activate.tsx",["117"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst axios = require('axios');\r\n\r\nconst Activate = () => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = (e:any) => {\r\n        // e.preventDefault();\r\n        // const uid = props.match.params.uid;\r\n        // const token = props.match.params.token;\r\n\r\n        // props.verify(uid, token);\r\n        // setVerified(true);\r\n        const url = window.location.href;\r\n        const index= url.lastIndexOf(\"/\");\r\n        const uid = url.slice(index+1);\r\n        const token = url.slice(index-2,index);\r\n        console.log(uid, token )\r\n\r\n        let options = {\r\n            url: `http://localhost:8000/auth/users/activation/`,\r\n            method: 'post',\r\n            data: { Uid: uid, Token: token }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(\"axios\", results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n    };\r\n\r\n    if (verified)\r\n        return <Redirect to='/' />\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', marginTop: '200px' }}>\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Activate;","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Signup\\Signup.tsx",["118","119","120","121","122","123"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Login\\Login.tsx",["124","125","126","127","128","129","130","131"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Provider-signup\\Provider-signup.tsx",["132","133","134","135","136","137","138","139","140","141","142"],"import React, { useState } from 'react';\r\nimport { appendErrors, useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nconst axios = require('axios');\r\n\r\ninterface FormData {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    re_password: string;\r\n    city: string;\r\n    phone: number;\r\n}\r\n\r\nconst ProviderSignup = () => {\r\n    const { register, handleSubmit, errors } = useForm<FormData>();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n\r\n    return (\r\n        <div id=\"signup\" className=\"center styled\">\r\n            <form id=\"signup-form\"\r\n                onSubmit={handleSubmit((formData) => {\r\n                    console.log(formData)\r\n                    // let options = {\r\n                    //     url: `http://localhost:8000/auth/users/`,\r\n                    //     method: 'post',\r\n                    //     data: {\r\n                    //         name: formData.name,\r\n                    //         email: formData.email,\r\n                    //         password: formData.password,\r\n                    //         re_password: formData.re_password,\r\n                    //         Phone: formData.phone,\r\n                    //         city: formData.city,\r\n                    //     }\r\n                    // }\r\n\r\n                    // axios(options)\r\n                    //     .then((results: any) => {\r\n                    //         console.log(\"axios\", results);\r\n\r\n                    //     })\r\n                    //     .catch((err: any) => {\r\n                    //         console.error(\"err===== =>\", err);\r\n                    //     })\r\n\r\n                    axios.post(`http://localhost:8000/auth/users/`, {\r\n                        name: formData.name,\r\n                        email: formData.email,\r\n                        password: formData.password,\r\n                        re_password: formData.password\r\n                    })\r\n\r\n                        .then((result: any) => {\r\n                            console.log(result)\r\n\r\n                        })\r\n                        .catch((err: any) => {\r\n                            console.error(\"err===== =>\", err);\r\n                        })\r\n\r\n                })}\r\n            >\r\n                <h1>Provider Sign Up</h1>\r\n                <br />\r\n                <div className=\"column\">\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input type=\"text\" className=\"text\" id=\"name\" name=\"name\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"name error\" ></div>\r\n\r\n                    <label htmlFor=\"email\" >Email:</label>\r\n                    <input type=\"email\" className=\"text\" id=\"email\" name=\"email\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"email error\" ></div>\r\n\r\n                    <label htmlFor=\"phone\" >Phone:</label>\r\n                    <input type=\"text\" className=\"text\" id=\"phone\" name=\"phone\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"phone error\" ></div>\r\n\r\n                    <label htmlFor=\"city\" >City:</label>\r\n                    <input type=\"text\" className=\"text\" id=\"city\" name=\"city\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"city error\" ></div>\r\n\r\n                    <label htmlFor=\"password\" >Password:</label>\r\n                    <input type=\"password\" className=\"text\" id=\"password\" name=\"password\" ref={register({ required: \"required\" })} />\r\n\r\n                    <label htmlFor=\"re_password\" >Confirm Password:</label>\r\n                    <input type=\"password\" className=\"text\" id=\"re_password\" name=\"re_password\" ref={register({ required: \"required\" })} />\r\n                    <div className=\"password error\" ></div>\r\n                </div>\r\n                <br />\r\n\r\n                <div className=\"password-req\" >8 characters or longer. Combine upper and lowercase letters and numbers</div><br />\r\n                <p >Already have an account? <Link to=\"/user/login\" style={{ textDecoration: \"none\" }}>Sign In</Link></p>\r\n                <button className=\"button\" >Sign Up</button><br />\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProviderSignup;\r\n\r\n\r\n\r\n// export default function Provider() {\r\n//     const { register, handleSubmit, errors } = useForm<FormData>();\r\n//     const [submitting, setSubmitting] = useState<boolean>(false);\r\n//     const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n//     const [title, setTitle] = useState('');\r\n//     console.log(\"title\", title)\r\n\r\n//     return <form \r\n//         onSubmit={handleSubmit((FormData) => {\r\n//             setSubmitting(true);\r\n//             setServerErrors([]);\r\n\r\n//             // console.log(FormData, \"FormData\");\r\n\r\n//             // const response = fetch('http://localhost:3000/servize', {\r\n//             //     method: \"POST\",\r\n//             //     headers: {\r\n//             //         \"Content-Type\": \"application/json\",\r\n//             //     },\r\n//             //     body: JSON.stringify({\r\n//             //         name: FormData.name,\r\n//             //         email: FormData.email,\r\n//             //         password: FormData.password,\r\n//             //         Phone: FormData.phone,\r\n//             //         city: FormData.city,\r\n//             //         terms: FormData.terms,\r\n//             //     }),\r\n//             // });\r\n//             // const data = await response.json();\r\n//             // console.log(data, \"server data\");\r\n\r\n//             // setSubmitting(false);\r\n//         })} \r\n//         >\r\n//         <p className=\"h5 text-center mb-4\">Register Providers</p>\r\n//         <div className=\"grey-text\"></div>\r\n\r\n//         <MDBContainer>\r\n//             <MDBRow>\r\n//                 <MDBCol md=\"6\">\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"name\">Name</label>\r\n//                         <MDBInput name=\"name\" id=\"name\" group type=\"text\" validate onChange={(e: any) => setTitle(e.target.value)} />\r\n//                         {errors.name ? <div>{errors.name.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"email\" >Email</label>\r\n//                         <MDBInput name=\"email\" id=\"email\" group type=\"email\" validate />\r\n//                         {errors.email ? <div>{errors.email.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"password\">Password</label>\r\n//                         <MDBInput name=\"password\" id=\"password\" group type=\"password\" validate />\r\n//                         {errors.password ? <div>{errors.password.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"phone\">Phone-no</label>\r\n//                         <MDBInput name=\"phone\" id=\"phone\" group type=\"phone\" validate />\r\n//                         {errors.phone ? <div>{errors.phone.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"city\">City</label>\r\n//                         <MDBInput name=\"city\" id=\"city\" group type=\"text\" validate />\r\n//                         {errors.city ? <div>{errors.city.message}</div> : null}\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label htmlFor=\"terms\">You must agree our terms</label>\r\n//                         <MDBInput group type=\"checkbox\" name=\"terms\" id=\"terms\" validate />\r\n//                         {errors.terms ? <div>{errors.terms.message}</div> : null}\r\n//                     </div>\r\n//                     <br></br>\r\n//                     <br></br>\r\n\r\n//                     <div className=\"text-center\">\r\n//                         <MDBBtn type=\"submit\" disabled={submitting}>Register</MDBBtn>\r\n//                     </div>\r\n\r\n//                 </MDBCol>\r\n//             </MDBRow>\r\n//         </MDBContainer>\r\n//     </form>;\r\n// }\r\n\r\n",["143","144"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Forgot-password\\Forgot-password.tsx",["145"],"import { store } from '../../actions/Users/usersActions';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// import './ForgotPassword.css';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\nconst ForgotPassword = ()=>{ \r\n    \r\n    const dispatch = useDispatch();\r\n    const userInStore = useSelector((state: any) => state.user);\r\n    console.log (\"rootstore\",userInStore)\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        let input = $('#forgot-form').serializeArray();\r\n        // console.log(input[0].value);\r\n        // const [email, setEmail] = useState(\"\") \r\n        dispatch(store(input))\r\n        // setEmail(\"\");\r\n\r\n        let options = {\r\n            url: `http://localhost:3000/auth/users/reset_password/`,\r\n            method: 'post',\r\n            data: { email: input[0].value }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n\r\n        try {\r\n            const serializedState = localStorage.getItem(\"state\");\r\n            if (serializedState === null) {\r\n                return undefined\r\n            }\r\n            return { user: JSON.parse(serializedState) }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            return;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div id=\"reset\">\r\n            <button ><Link to=\"/\">Return To Home Page</Link> </button>\r\n            <form className=\"forgot-form\" id=\"forgot-form\" onSubmit={ handleSubmit}>\r\n                <h1>Forgot Password</h1>\r\n                <br />\r\n                <div className=\"\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" className=\"text\" id=\"email\" name=\"email\"/>\r\n                </div>\r\n                <br />\r\n                <button className=\"button\" >Reset Password</button><br />\r\n\r\n                <p>Back to <Link to=\"/signin\" >Sign In</Link></p>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Provider-container\\Provider-container.tsx",["146","147"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Reset-password\\Reset-password.tsx",["148","149"],"\r\n// import { showSign } from '../actions/actions.js';\r\n// import './NewPassword.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport React from 'react';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\n\r\nconst ResetPassword = () => {\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        // console.log(\"hi\");\r\n        let input = $('#reset-form').serializeArray();\r\n        console.log(input);\r\n\r\n        let options = {\r\n            url: `http://localhost:3000/user/reset/:token`,\r\n            method: 'post',\r\n            // data: { email: input[0].value }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n    }   \r\n\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form className=\"reset-form\" id=\"reset-form\" onSubmit={handleSubmit}>\r\n                        <p className=\"h4 text-center mb-4\">Reset Password</p>\r\n                        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                            New Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginEmailEx\" className=\"form-control\" />\r\n                        <br />\r\n                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                            Confirm Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginPasswordEx\" className=\"form-control\" />\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"indigo\" type=\"submit\">Update</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reducers\\rootReducer.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\reducers\\Users\\usersReducer.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\actions\\Users\\usersActions.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\actions\\actionTypes.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Reset-password\\Reset-password-confirm.tsx",["150","151"],"// import { showSign } from '../actions/actions.js';\r\n// import './NewPassword.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport React from 'react';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\n\r\nconst ResetPassword = () => {\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        // console.log(\"hi\");\r\n        let input = $('#reset-form').serializeArray();\r\n        console.log(input);\r\n\r\n        let options = {\r\n            url: `http://localhost:3000/user/reset/:token`,\r\n            method: 'post',\r\n            // data: { email: input[0].value }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n    }   \r\n\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form className=\"reset-form\" id=\"reset-form\" onSubmit={handleSubmit}>\r\n                        <p className=\"h4 text-center mb-4\">Reset Password</p>\r\n                        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                            New Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginEmailEx\" className=\"form-control\" />\r\n                        <br />\r\n                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                            Confirm Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginPasswordEx\" className=\"form-control\" />\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"indigo\" type=\"submit\">Update</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n",["152","153"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Nav-bar\\Nav-bar.tsx",["154","155","156"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./Nav-bar.css\";\r\n// import Logout from '../Logout/Logout';\r\nconst $ = require(\"jquery\");\r\n\r\n$(window).on(\"scroll\", function () {\r\n  if ($(window).scrollTop()) {\r\n    $(\"nav\").addClass(\"black\");\r\n  } else {\r\n    $(\"nav\").removeClass(\"black\");\r\n  }\r\n});\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <header id=\"nav-bar\">\r\n      <nav>\r\n        <div className=\"menu-icon\">\r\n          <i className=\"fa fa-bars fa-2x\"></i>\r\n        </div>\r\n        <div className=\"logo\">\r\n          <Link to=\"/\">Servize</Link>\r\n        </div>\r\n        <div className=\"menu\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">How it Works</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Browse Jobs</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Language</a>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/prov/signup\">Become a Service Provider</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/user/login\">Log In</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/user/signup\">Join</Link>\r\n            </li>\r\n            <li>\r\n              <Button\r\n                onClick={() => {\r\n                  localStorage.clear();\r\n                  window.location.href = \"/\";\r\n                }}\r\n                id=\"logout\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n    // <nav className=\"navbar navbar-expand-lg navbar-dark indigo\">\r\n    //     <a className=\"navbar-brand\" href=\"#\">Navbar w/ text</a>\r\n    //     <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\r\n    //         aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    //         <span className=\"navbar-toggler-icon\"></span>\r\n    //     </button>\r\n    //     <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n    //         <ul className=\"navbar-nav mr-auto\">\r\n    //             <li className=\"nav-item active\">\r\n    //                 <a className=\"nav-link\" href=\"#\">Home\r\n    //     <span className=\"sr-only\">(current)</span>\r\n    //                 </a>\r\n    //             </li>\r\n    //             <li className=\"nav-item\">\r\n    //                 <a className=\"nav-link\" href=\"#\">Features</a>\r\n    //             </li>\r\n    //             <li className=\"nav-item\">\r\n    //                 <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n    //             </li>\r\n    //         </ul>\r\n    //         <span className=\"navbar-text white-text\">\r\n    //             Navbar text with an inline element\r\n    //     </span>\r\n    //     </div>\r\n    // </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\catagories\\Catagories.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Main-view\\Main-view.tsx",["157"],"import React from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Main-view.css';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"img-container\">\r\n            <img className=\"main-img\" src=\"https://www.saga.co.uk/contentlibrary/saga/publishing/verticals/home-and-garden/home-and-interiors/how-to-guides/builders/avoid-cowboy-builders.jpg\"></img>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Main;","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Footer\\Footer.tsx",["158","159","160","161"],"import React from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer id=\"footer\" className=\"page-footer font-small mdb-color pt-4\">\r\n\r\n            <div className=\"container text-center text-md-left\">\r\n\r\n                <div className=\"row text-center text-md-left mt-3 pb-3\">\r\n\r\n                    <div className=\"col-md-3 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Company name</h6>\r\n                        <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\r\n                        consecteturadipisicing elit.</p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-2 col-lg-2 col-xl-2 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Categories</h6>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">About</h6>\r\n                        <p>\r\n                            <a href=\"#!\">Terms of Service</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Privacy Policy</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Partnerships</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Help</a>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Apps</h6>\r\n                        <p>\r\n                            <i className=\"fas fa-home mr-3\"></i> App store</p>\r\n                        \r\n                        <p>\r\n                            <i className=\"fas fa-print mr-3\"></i> Google Play</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"row d-flex align-items-center\">\r\n\r\n                    <div className=\"col-md-7 col-lg-8\">\r\n\r\n                        <p className=\"text-center text-md-left\">© 2020 Copyright:\r\n                            <a href=\"https://mdbootstrap.com/\">\r\n                                <strong> servize.com</strong>\r\n                            </a>\r\n                        </p>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-5 col-lg-4 ml-lg-0\">\r\n\r\n                        <div className=\"text-center text-md-right\">\r\n                            <ul className=\"list-unstyled list-inline\">\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-facebook-f\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-twitter\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-google-plus-g\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-linkedin-in\"></i>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>                 \r\n                </div>               \r\n            </div>             \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Logout\\Logout.tsx",[],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Categories-container\\Categories-container.tsx",["162","163","164","165","166","167","168","169"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Search\\Search.tsx",["170","171","172","173","174","175"],"C:\\Users\\mms\\Desktop\\immersive\\projects\\project phase2\\servize\\client\\src\\components\\Categories-container\\Categories-card.tsx",["176","177","178","179","180","181"],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":null,"fatal":true,"severity":2,"message":"186","line":6,"column":0},{"ruleId":"187","severity":1,"message":"188","line":1,"column":23,"nodeType":"189","messageId":"190","endLine":1,"endColumn":38},{"ruleId":"187","severity":1,"message":"191","line":1,"column":40,"nodeType":"189","messageId":"190","endLine":1,"endColumn":47},{"ruleId":"187","severity":1,"message":"192","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":24},{"ruleId":"187","severity":1,"message":"193","line":6,"column":7,"nodeType":"189","messageId":"190","endLine":6,"endColumn":19},{"ruleId":"187","severity":1,"message":"194","line":8,"column":7,"nodeType":"189","messageId":"190","endLine":8,"endColumn":17},{"ruleId":"187","severity":1,"message":"195","line":6,"column":22,"nodeType":"189","messageId":"190","endLine":6,"endColumn":33},{"ruleId":"187","severity":1,"message":"196","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"197","line":32,"column":37,"nodeType":"189","messageId":"190","endLine":32,"endColumn":43},{"ruleId":"187","severity":1,"message":"198","line":33,"column":12,"nodeType":"189","messageId":"190","endLine":33,"endColumn":22},{"ruleId":"187","severity":1,"message":"199","line":33,"column":24,"nodeType":"189","messageId":"190","endLine":33,"endColumn":37},{"ruleId":"187","severity":1,"message":"200","line":34,"column":12,"nodeType":"189","messageId":"190","endLine":34,"endColumn":24},{"ruleId":"187","severity":1,"message":"201","line":34,"column":26,"nodeType":"189","messageId":"190","endLine":34,"endColumn":41},{"ruleId":"187","severity":1,"message":"196","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"202","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"203","line":18,"column":13,"nodeType":"189","messageId":"190","endLine":18,"endColumn":21},{"ruleId":"187","severity":1,"message":"197","line":18,"column":37,"nodeType":"189","messageId":"190","endLine":18,"endColumn":43},{"ruleId":"187","severity":1,"message":"199","line":19,"column":24,"nodeType":"189","messageId":"190","endLine":19,"endColumn":37},{"ruleId":"187","severity":1,"message":"200","line":20,"column":12,"nodeType":"189","messageId":"190","endLine":20,"endColumn":24},{"ruleId":"187","severity":1,"message":"201","line":20,"column":26,"nodeType":"189","messageId":"190","endLine":20,"endColumn":41},{"ruleId":"204","severity":1,"message":"205","line":68,"column":51,"nodeType":"206","messageId":"207","endLine":68,"endColumn":53},{"ruleId":"187","severity":1,"message":"196","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"208","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":22},{"ruleId":"187","severity":1,"message":"209","line":4,"column":24,"nodeType":"189","messageId":"190","endLine":4,"endColumn":30},{"ruleId":"187","severity":1,"message":"210","line":4,"column":32,"nodeType":"189","messageId":"190","endLine":4,"endColumn":38},{"ruleId":"187","severity":1,"message":"211","line":4,"column":40,"nodeType":"189","messageId":"190","endLine":4,"endColumn":46},{"ruleId":"187","severity":1,"message":"212","line":4,"column":48,"nodeType":"189","messageId":"190","endLine":4,"endColumn":56},{"ruleId":"187","severity":1,"message":"197","line":20,"column":37,"nodeType":"189","messageId":"190","endLine":20,"endColumn":43},{"ruleId":"187","severity":1,"message":"198","line":21,"column":12,"nodeType":"189","messageId":"190","endLine":21,"endColumn":22},{"ruleId":"187","severity":1,"message":"199","line":21,"column":24,"nodeType":"189","messageId":"190","endLine":21,"endColumn":37},{"ruleId":"187","severity":1,"message":"200","line":22,"column":12,"nodeType":"189","messageId":"190","endLine":22,"endColumn":24},{"ruleId":"187","severity":1,"message":"201","line":22,"column":26,"nodeType":"189","messageId":"190","endLine":22,"endColumn":41},{"ruleId":"182","replacedBy":"213"},{"ruleId":"184","replacedBy":"214"},{"ruleId":"187","severity":1,"message":"215","line":2,"column":17,"nodeType":"189","messageId":"190","endLine":2,"endColumn":25},{"ruleId":"187","severity":1,"message":"216","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":20},{"ruleId":"187","severity":1,"message":"217","line":5,"column":11,"nodeType":"189","messageId":"190","endLine":5,"endColumn":19},{"ruleId":"187","severity":1,"message":"202","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":14},{"ruleId":"187","severity":1,"message":"218","line":4,"column":16,"nodeType":"189","messageId":"190","endLine":4,"endColumn":24},{"ruleId":"187","severity":1,"message":"202","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"218","line":3,"column":16,"nodeType":"189","messageId":"190","endLine":3,"endColumn":24},{"ruleId":"182","replacedBy":"219"},{"ruleId":"184","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":32,"column":15,"nodeType":"223","endLine":32,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":35,"column":15,"nodeType":"223","endLine":35,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":38,"column":15,"nodeType":"223","endLine":38,"endColumn":27},{"ruleId":"224","severity":1,"message":"225","line":10,"column":13,"nodeType":"223","endLine":10,"endColumn":193},{"ruleId":"221","severity":1,"message":"226","line":89,"column":37,"nodeType":"223","endLine":89,"endColumn":95},{"ruleId":"221","severity":1,"message":"226","line":94,"column":37,"nodeType":"223","endLine":94,"endColumn":95},{"ruleId":"221","severity":1,"message":"226","line":99,"column":37,"nodeType":"223","endLine":99,"endColumn":95},{"ruleId":"221","severity":1,"message":"226","line":104,"column":37,"nodeType":"223","endLine":104,"endColumn":95},{"ruleId":"187","severity":1,"message":"215","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"227","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"202","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"218","line":2,"column":16,"nodeType":"189","messageId":"190","endLine":2,"endColumn":24},{"ruleId":"187","severity":1,"message":"228","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":15},{"ruleId":"187","severity":1,"message":"229","line":10,"column":7,"nodeType":"189","messageId":"190","endLine":10,"endColumn":12},{"ruleId":"187","severity":1,"message":"230","line":11,"column":7,"nodeType":"189","messageId":"190","endLine":11,"endColumn":8},{"ruleId":"187","severity":1,"message":"217","line":17,"column":11,"nodeType":"189","messageId":"190","endLine":17,"endColumn":19},{"ruleId":"187","severity":1,"message":"215","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"202","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"228","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":15},{"ruleId":"187","severity":1,"message":"230","line":7,"column":7,"nodeType":"189","messageId":"190","endLine":7,"endColumn":8},{"ruleId":"187","severity":1,"message":"231","line":10,"column":11,"nodeType":"189","messageId":"190","endLine":10,"endColumn":22},{"ruleId":"187","severity":1,"message":"217","line":11,"column":11,"nodeType":"189","messageId":"190","endLine":11,"endColumn":19},{"ruleId":"187","severity":1,"message":"215","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"227","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"218","line":2,"column":16,"nodeType":"189","messageId":"190","endLine":2,"endColumn":24},{"ruleId":"187","severity":1,"message":"232","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":21},{"ruleId":"187","severity":1,"message":"230","line":8,"column":7,"nodeType":"189","messageId":"190","endLine":8,"endColumn":8},{"ruleId":"187","severity":1,"message":"231","line":13,"column":11,"nodeType":"189","messageId":"190","endLine":13,"endColumn":22},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"Parsing error: Merge conflict marker encountered.","@typescript-eslint/no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'persistedReducer' is defined but never used.","'initialState' is assigned a value but never used.","'middleware' is assigned a value but never used.","'setVerified' is assigned a value but never used.","'appendErrors' is defined but never used.","'errors' is assigned a value but never used.","'submitting' is assigned a value but never used.","'setSubmitting' is assigned a value but never used.","'serverErrors' is assigned a value but never used.","'setServerErrors' is assigned a value but never used.","'Link' is defined but never used.","'register' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBBtn' is defined but never used.","'MDBInput' is defined but never used.",["233"],["234"],"'useState' is defined but never used.","'ProviderCard' is defined but never used.","'dispatch' is assigned a value but never used.","'Redirect' is defined but never used.",["233"],["234"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'store' is defined but never used.","'axios' is assigned a value but never used.","'$' is assigned a value but never used.","'userInStore' is assigned a value but never used.","'SubCategories' is defined but never used.","no-global-assign","no-unsafe-negation"]