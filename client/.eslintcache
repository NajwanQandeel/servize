[{"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\index.tsx":"1","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\App.tsx":"3","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Signup.tsx":"4","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Login.tsx":"5","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Footer\\Footer.tsx":"6","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Nav-bar\\Nav-bar.tsx":"7","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Main-view\\Main-view.tsx":"8","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\catagories\\Catagories.tsx":"9","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Register-provider\\Regester-provider.tsx":"10","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\reducers\\configureStore.tsx":"11","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Reset-password\\Reset-password.tsx":"12","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Categories\\Categories.tsx":"13","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Provider-container\\Provider-container.tsx":"14","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\reducers\\rootReducer.tsx":"15","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Forgot-password\\Forgot-password.tsx":"16","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Provider-card\\Provider-card.tsx":"17","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\actions\\actions.tsx":"18","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\profiles\\ProviderProf.tsx":"19","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\profiles\\UserProf.tsx":"20"},{"size":764,"mtime":1607505840537,"results":"21","hashOfConfig":"22"},{"size":440,"mtime":1607248334774,"results":"23","hashOfConfig":"22"},{"size":1677,"mtime":1607534490179,"results":"24","hashOfConfig":"22"},{"size":3140,"mtime":1607471119260,"results":"25","hashOfConfig":"22"},{"size":2111,"mtime":1607471315327,"results":"26","hashOfConfig":"22"},{"size":4990,"mtime":1607329742412,"results":"27","hashOfConfig":"22"},{"size":2705,"mtime":1607533174276,"results":"28","hashOfConfig":"22"},{"size":536,"mtime":1607505840353,"results":"29","hashOfConfig":"22"},{"size":7843,"mtime":1607380355477,"results":"30","hashOfConfig":"22"},{"size":3918,"mtime":1607471147517,"results":"31","hashOfConfig":"22"},{"size":700,"mtime":1607505840538,"results":"32","hashOfConfig":"22"},{"size":2143,"mtime":1607521672441,"results":"33","hashOfConfig":"22"},{"size":3379,"mtime":1607521501889,"results":"34","hashOfConfig":"22"},{"size":619,"mtime":1607505840475,"results":"35","hashOfConfig":"22"},{"size":1076,"mtime":1607505840540,"results":"36","hashOfConfig":"22"},{"size":2303,"mtime":1607523646524,"results":"37","hashOfConfig":"22"},{"size":965,"mtime":1607505840444,"results":"38","hashOfConfig":"22"},{"size":209,"mtime":1607505840249,"results":"39","hashOfConfig":"22"},{"size":1759,"mtime":1607554692794,"results":"40","hashOfConfig":"22"},{"size":1682,"mtime":1607555165290,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"x2uemw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\index.tsx",[],["97","98"],"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\App.tsx",["99"],"import React from 'react';\r\n\r\nimport Signup from './components/Signup';\r\nimport Login from './components/Login';\r\nimport Catagories from './components/catagories/Catagories';\r\nimport ProviderProf from './components/profiles/ProviderProf';\r\nimport UserProf from './components/profiles/UserProf'\r\nimport Provider from './components/Register-provider/Regester-provider'\r\n\r\n// import './App.css';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport Navbar from \"./components/Nav-bar/Nav-bar\";\r\nimport Categories from \"./components/Categories/Categories\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Main from \"./components/Main-view/Main-view\";\r\n\r\nimport ForgotPassword from \"./components/Forgot-password/Forgot-password\";\r\nimport ResetPassword from \"./components/Reset-password/Reset-password\";\r\nimport ProviderContainer from \"./components/Provider-container/Provider-container\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n\r\n        {/* <Navbar /> */}\r\n        <Signup />\r\n        <Login />\r\n        <Provider />\r\n        <Navbar />\r\n        <Main />\r\n        <Catagories />\r\n        <ProviderProf />\r\n        <UserProf />\r\n\r\n        <Switch>\r\n\r\n          {/* <Route exact path=\"/\" component={Main} /> */}\r\n          <Route exact path=\"/\" component={Categories} />\r\n          <Route path=\"/provider\" component={ProviderContainer} />\r\n          <Route path=\"/user/forgot-password\" component={ForgotPassword} />\r\n          <Route path=\"/reset/:token\" component={ResetPassword} />\r\n\r\n        </Switch>\r\n\r\n        {/* <Footer /> */}\r\n\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Signup.tsx",["100","101","102","103"],"import React, { useState } from 'react';\r\nimport { appendErrors, useForm } from 'react-hook-form';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n// import axios from \"axios\"\r\n\r\ninterface FormSignup {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    phone: number;\r\n}\r\n\r\nexport default function Signup() {\r\n    const { register, handleSubmit, errors } = useForm<FormSignup>();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n\r\n    return < form\r\n        onSubmit={handleSubmit((FormSignup) => {\r\n            setSubmitting(true);\r\n            setServerErrors([]);\r\n            // console.log(FormSignup, \"FormSignup\");\r\n\r\n            const response = fetch('http://localhost:3000/servize', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    name: FormSignup.name,\r\n                    email: FormSignup.email,\r\n                    password: FormSignup.password,\r\n                    Phone: FormSignup.phone,\r\n                }),\r\n            });\r\n\r\n            setSubmitting(false);\r\n        })\r\n        } >\r\n\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n\r\n                    <p className=\"h5 text-center mb-4\">Sign up</p>\r\n                    <div className=\"grey-text\">\r\n\r\n                        <MDBInput htmlFor=\"name\" label=\"Your name\" icon=\"user\" group type=\"string\" validate error=\"wrong\" success=\"right\" />\r\n                        {errors.name ? <div>{errors.name.message}</div> : null}\r\n\r\n                        <MDBInput htmlFor=\"email\" label=\"Your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" />\r\n                        {errors.email ? <div>{errors.email.message}</div> : null}\r\n\r\n                        <MDBInput htmlFor=\"phone\" label=\"Your phone no\" icon=\"phone-alt\" group type=\"number\" validate error=\"wrong\" success=\"right\" />\r\n                        {errors.phone ? <div>{errors.phone.message}</div> : null}\r\n\r\n\r\n                        <MDBInput htmlFor=\"password\" label=\"Your password\" icon=\"lock\" group type=\"password\" validate error=\"wrong\" success=\"right\" />\r\n                        {errors.password ? <div>{errors.password.message}</div> : null}\r\n\r\n\r\n                        <MDBInput htmlFor=\"password\" label=\"Confirm your password\" icon=\"lock\" group type=\"text\" validate error=\"wrong\" success=\"right\" />\r\n                        {errors.password ? <div>{errors.password.message}</div> : null}\r\n\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn color=\"primary\" type=\"submit\" disabled={submitting}>Sign up</MDBBtn>\r\n                    </div>\r\n\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    </form >\r\n};\r\n","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Login.tsx",["104","105","106","107","108"],"import React, { useState } from 'react';\r\nimport { appendErrors, useForm } from 'react-hook-form';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\ninterface FormLogin {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport default function Login() {\r\n    const { register, handleSubmit, errors } = useForm<FormLogin>();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n\r\n    return < form\r\n        onSubmit={handleSubmit((FormLogin) => {\r\n            setSubmitting(true);\r\n            setServerErrors([]);\r\n            // console.log(FormLogin, \"FormLogin\");\r\n\r\n            const response = fetch('http://localhost:3000/servize', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    email: FormLogin.email,\r\n                    password: FormLogin.password,\r\n                }),\r\n            });\r\n\r\n            setSubmitting(false);\r\n        })} >\r\n\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form>\r\n                        <p className=\"h5 text-center mb-4\">Log in</p>\r\n                        <div className=\"grey-text\">\r\n                            <MDBInput label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\" success=\"right\" />\r\n                            <MDBInput label=\"Type your password\" icon=\"lock\" group type=\"password\" validate error=\"wrong\" success=\"right\" />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <MDBBtn type=\"submit\" disabled={submitting}>Log in</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    </ form>\r\n}","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Footer\\Footer.tsx",["109","110","111","112"],"\r\nimport React from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"page-footer font-small mdb-color pt-4\">\r\n\r\n            <div className=\"container text-center text-md-left\">\r\n\r\n                <div className=\"row text-center text-md-left mt-3 pb-3\">\r\n\r\n                    <div className=\"col-md-3 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Company name</h6>\r\n                        <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\r\n                        consecteturadipisicing elit.</p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-2 col-lg-2 col-xl-2 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Categories</h6>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Cat</a>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">About</h6>\r\n                        <p>\r\n                            <a href=\"#!\">Terms of Service</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Privacy Policy</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Partnerships</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"#!\">Help</a>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <hr className=\"w-100 clearfix d-md-none\"/>\r\n\r\n                    <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mt-3\">\r\n                        <h6 className=\"text-uppercase mb-4 font-weight-bold\">Apps</h6>\r\n                        <p>\r\n                            <i className=\"fas fa-home mr-3\"></i> App store</p>\r\n                        \r\n                        <p>\r\n                            <i className=\"fas fa-print mr-3\"></i> Google Play</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"row d-flex align-items-center\">\r\n\r\n                    <div className=\"col-md-7 col-lg-8\">\r\n\r\n                        <p className=\"text-center text-md-left\">© 2020 Copyright:\r\n                            <a href=\"https://mdbootstrap.com/\">\r\n                                <strong> servize.com</strong>\r\n                            </a>\r\n                        </p>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-5 col-lg-4 ml-lg-0\">\r\n\r\n                        <div className=\"text-center text-md-right\">\r\n                            <ul className=\"list-unstyled list-inline\">\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-facebook-f\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-twitter\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-google-plus-g\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a className=\"btn-floating btn-sm rgba-white-slight mx-1\">\r\n                                        <i className=\"fab fa-linkedin-in\"></i>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>                 \r\n                </div>               \r\n            </div>             \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;",["113","114"],"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Nav-bar\\Nav-bar.tsx",["115","116","117","118","119","120"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Nav-bar.css';\r\nconst $ = require('jquery');\r\n\r\n\r\n$(window).on(\"scroll\", function () {\r\n    if ($(window).scrollTop()) {\r\n        $('nav').addClass('black');\r\n    }\r\n\r\n    else {\r\n        $('nav').removeClass('black');\r\n    }\r\n})\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <header id=\"nav-bar\">\r\n            <nav>\r\n                <div className=\"menu-icon\">\r\n                    <i className=\"fa fa-bars fa-2x\"></i>\r\n                </div>\r\n                <div className=\"logo\">\r\n                    <a href=\"#\">Servize</a>\r\n                </div>\r\n                <div className=\"menu\">\r\n                    <ul>\r\n                        <li><a href=\"#\">How it Works</a></li>\r\n                        <li><a href=\"#\">Browse Jobs</a></li>\r\n                        <li><a href=\"#\">Language</a></li>\r\n                        <li><a href=\"#\">Become a Seller</a></li>\r\n                        <li><a href=\"#\">Sign In</a></li>\r\n                        <li><Link to=\"/user/forgot-password\">Join</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n        // <nav className=\"navbar navbar-expand-lg navbar-dark indigo\">\r\n        //     <a className=\"navbar-brand\" href=\"#\">Navbar w/ text</a>\r\n        //     <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\r\n        //         aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        //         <span className=\"navbar-toggler-icon\"></span>\r\n        //     </button>\r\n        //     <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n        //         <ul className=\"navbar-nav mr-auto\">\r\n        //             <li className=\"nav-item active\">\r\n        //                 <a className=\"nav-link\" href=\"#\">Home\r\n        //     <span className=\"sr-only\">(current)</span>\r\n        //                 </a>\r\n        //             </li>\r\n        //             <li className=\"nav-item\">\r\n        //                 <a className=\"nav-link\" href=\"#\">Features</a>\r\n        //             </li>\r\n        //             <li className=\"nav-item\">\r\n        //                 <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n        //             </li>\r\n        //         </ul>\r\n        //         <span className=\"navbar-text white-text\">\r\n        //             Navbar text with an inline element\r\n        //     </span>\r\n        //     </div>\r\n        // </nav>\r\n    )\r\n}\r\nexport default Navbar;","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Main-view\\Main-view.tsx",["121"],"import React from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Main-view.css';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"img-container\">\r\n            <img className=\"main-img\" src=\"https://www.saga.co.uk/contentlibrary/saga/publishing/verticals/home-and-garden/home-and-interiors/how-to-guides/builders/avoid-cowboy-builders.jpg\"></img>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Main;","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\catagories\\Catagories.tsx",[],"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Register-provider\\Regester-provider.tsx",["122","123","124","125"],"import React, { useState } from 'react';\r\nimport { appendErrors, useForm } from 'react-hook-form'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\ninterface FormData {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    city: string;\r\n    phone: number;\r\n    terms: boolean;\r\n}\r\n\r\nexport default function Provider() {\r\n    const { register, handleSubmit, errors } = useForm<FormData>();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [serverErrors, setServerErrors] = useState<Array<string>>([]);\r\n\r\n    return <form\r\n        onSubmit={handleSubmit((FormData) => {\r\n            setSubmitting(true);\r\n            setServerErrors([]);\r\n            // console.log(FormData, \"FormData\");\r\n\r\n            const response = fetch('http://localhost:3000/servize', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    name: FormData.name,\r\n                    email: FormData.email,\r\n                    password: FormData.password,\r\n                    Phone: FormData.phone,\r\n                    city: FormData.city,\r\n                    terms: FormData.terms,\r\n                }),\r\n            });\r\n            // const data = await response.json();\r\n            // console.log(data, \"server data\");\r\n\r\n            setSubmitting(false);\r\n        })} >\r\n        <p className=\"h5 text-center mb-4\">Register Providers</p>\r\n        <div className=\"grey-text\"></div>\r\n\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <MDBInput name=\"name\" id=\"name\" group type=\"text\" validate />\r\n                        {errors.name ? <div>{errors.name.message}</div> : null}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"email\" >Email</label>\r\n                        <MDBInput name=\"email\" id=\"email\" group type=\"email\" validate />\r\n                        {errors.email ? <div>{errors.email.message}</div> : null}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <MDBInput name=\"password\" id=\"password\" group type=\"password\" validate />\r\n                        {errors.password ? <div>{errors.password.message}</div> : null}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"phone\">Phone-no</label>\r\n                        <MDBInput name=\"phone\" id=\"phone\" group type=\"phone\" validate />\r\n                        {errors.phone ? <div>{errors.phone.message}</div> : null}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"city\">City</label>\r\n                        <MDBInput name=\"city\" id=\"city\" group type=\"text\" validate />\r\n                        {errors.city ? <div>{errors.city.message}</div> : null}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"terms\">You must agree our terms</label>\r\n                        <MDBInput group type=\"checkbox\" name=\"terms\" id=\"terms\" validate />\r\n                        {errors.terms ? <div>{errors.terms.message}</div> : null}\r\n                    </div>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn type=\"submit\" disabled={submitting}>Register</MDBBtn>\r\n                    </div>\r\n\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    </form>;\r\n}\r\n\r\n","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\reducers\\configureStore.tsx",["126","127"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport thunk from 'redux-thunk';\r\n// import ReduxThunk  from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    whitelist: [],\r\n    blacklist: [],\r\n    debug: true\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(persistedReducer, applyMiddleware(thunk)) //,middleware\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor }\r\n\r\n","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Reset-password\\Reset-password.tsx",["128","129"],"// import { showSign } from '../actions/actions.js';\r\n// import './NewPassword.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport React from 'react';\r\nconst axios = require('axios');\r\n// const $ = require('jquery');\r\n\r\n\r\nconst ResetPassword = () => {\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        // console.log(\"hi\");\r\n        let input = $('#reset-form').serializeArray();\r\n        console.log(input);\r\n\r\n        let options = {\r\n            url: `http://localhost:3000/user/reset/:token`,\r\n            method: 'post',\r\n            // data: { email: input[0].value }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form className=\"reset-form\" id=\"reset-form\" onSubmit={handleSubmit}>\r\n                        <p className=\"h4 text-center mb-4\">Reset Password</p>\r\n                        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n                            New Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginEmailEx\" className=\"form-control\" />\r\n                        <br />\r\n                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n                            Confirm Password\r\n                        </label>\r\n                        <input type=\"password\" id=\"defaultFormLoginPasswordEx\" className=\"form-control\" />\r\n                        <div className=\"text-center mt-4\">\r\n                            <MDBBtn color=\"indigo\" type=\"submit\">Update</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Categories\\Categories.tsx",["130","131","132","133","134","135"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Categories.css';\r\n// const $ = require('jquery');\r\n\r\n\r\n\r\nconst Categories = () => {\r\n\r\n    return (\r\n\r\n        <div id=\"cat-img\" className=\"carousel slide carousel-multi-item\" data-ride=\"carousel\">\r\n\r\n\r\n            {/* <div className=\"controls-top\">\r\n                <a className=\"btn-floating\" href=\"#multi-item-example\" data-slide=\"prev\"><i className=\"fa fa-chevron-left\"></i></a>\r\n                <a className=\"btn-floating\" href=\"#multi-item-example\" data-slide=\"next\"><i className=\"fa fa-chevron-right\"></i></a>\r\n            </div> */}\r\n\r\n\r\n\r\n            {/* <ol className=\"carousel-indicators\">\r\n                <li data-target=\"#multi-item-example\" data-slide-to=\"0\" className=\"active\"></li>\r\n                <li data-target=\"#multi-item-example\" data-slide-to=\"1\"></li>\r\n                <li data-target=\"#multi-item-example\" data-slide-to=\"2\"></li>\r\n            </ol> */}\r\n\r\n\r\n            <div className=\"carousel-item\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"card mb-2\">\r\n                            <img className=\"card-img-top\" src=\"https://mdbootstrap.com/img/Photos/Horizontal/Food/4-col/img%20(53).jpg\"\r\n                                alt=\"Card image cap\" />\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Card title</h4>\r\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the\r\n                card's content.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3 d-none d-md-block\">\r\n                        <div className=\"card mb-2\">\r\n                            <img className=\"card-img-top\" src=\"https://picsum.photos/seed/picsum/200/160\"\r\n                                alt=\"Card image cap\" />\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Card title</h4>\r\n                                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the\r\n                card's content.</p>\r\n                                {/* <a className=\"btn btn-primary\">Button</a> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"\">\r\n                        <div className=\"\">\r\n                            <a className=\"\" >\r\n                                <h4 className=\"\">Card title</h4>\r\n                                <p className=\"\">Some quick example text to build on the card title and make up the bulk of the\r\n                    card's content.</p>\r\n\r\n                                <img className=\"\" src=\"\"\r\n                                    alt=\"Card image cap\" />\r\n                            </a>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Categories;","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Provider-container\\Provider-container.tsx",["136"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n import ProviderCard from \"../Provider-card/Provider-card\";\r\nconst ProviderContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const userInStore = useSelector((state: any) => state.user);\r\n    // console.log(userInStore)\r\n    return ( \r\n        <div className=\"list\">\r\n            {userInStore.map((user:any, index:number) =>\r\n                <ProviderCard\r\n                    key={index}\r\n                    user={user}\r\n                />\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ProviderContainer;","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\reducers\\rootReducer.tsx",[],"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Forgot-password\\Forgot-password.tsx",["137"],"import { store } from '../../actions/actions';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// import './ForgotPassword.css';\r\nconst axios = require('axios');\r\nconst $ = require('jquery');\r\n\r\n// Sends a request to change password for a user that forgot the password\r\n// Using email verification\r\n\r\n\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const userInStore = useSelector((state: any) => state.user);\r\n    console.log(userInStore)\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        let input = $('#forgot-form').serializeArray();\r\n        // console.log(input[0].value);\r\n        // const [email, setEmail] = useState(\"\")\r\n        dispatch(store(input))\r\n        // setEmail(\"\");\r\n\r\n        let options = {\r\n            url: `http://localhost:3000/user/forgot-password`,\r\n            method: 'post',\r\n            data: { email: input[0].value }\r\n        }\r\n\r\n        axios(options)\r\n            .then((results: any) => {\r\n                console.log(results);\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(\"err===== =>\", err);\r\n            })\r\n\r\n        try {\r\n            const serializedState = localStorage.getItem(\"state\");\r\n            if (serializedState === null) {\r\n                return undefined\r\n            }\r\n            return { user: JSON.parse(serializedState) }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"reset\">\r\n            <button ><Link to=\"/\">Return To Home Page</Link> </button>\r\n            <form className=\"forgot-form\" id=\"forgot-form\" onSubmit={handleSubmit}>\r\n                <h1>Forgot Password</h1>\r\n                <br />\r\n                <div className=\"\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" className=\"text\" id=\"email\" name=\"email\" />\r\n                </div>\r\n                <br />\r\n                <button className=\"button\" >Reset Password</button><br />\r\n\r\n                <p>Back to <Link to=\"/signin\" >Sign In</Link></p>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\Provider-card\\Provider-card.tsx",["138","139","140","141"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nconst  handleClick =() =>{\r\n\r\n}\r\nconst ProviderCard = ({user}:{user:any}) => {\r\n    const userInStore = useSelector((state: any) => state.user);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        < div className=\"col-md-3 d-none d-md-block\" >\r\n            <div className=\"card mb-2\">\r\n                <img className=\"card-img-top\" src={user.img}/>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\" onClick={handleClick}>{user.name}</h4>\r\n                    <p className=\"card-text\">{user.description}</p>\r\n                    <a className=\"btn btn-primary\">Learn more</a>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ProviderCard;\r\n\r\n","C:\\Users\\UOE\\Desktop\\servize\\client\\src\\actions\\actions.tsx",[],"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\profiles\\ProviderProf.tsx",["142"],"C:\\Users\\UOE\\Desktop\\servize\\client\\src\\components\\profiles\\UserProf.tsx",["143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":14},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"148","severity":1,"message":"153","line":17,"column":13,"nodeType":"150","messageId":"151","endLine":17,"endColumn":21},{"ruleId":"148","severity":1,"message":"154","line":19,"column":12,"nodeType":"150","messageId":"151","endLine":19,"endColumn":24},{"ruleId":"148","severity":1,"message":"155","line":27,"column":19,"nodeType":"150","messageId":"151","endLine":27,"endColumn":27},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"148","severity":1,"message":"153","line":14,"column":13,"nodeType":"150","messageId":"151","endLine":14,"endColumn":21},{"ruleId":"148","severity":1,"message":"156","line":14,"column":37,"nodeType":"150","messageId":"151","endLine":14,"endColumn":43},{"ruleId":"148","severity":1,"message":"154","line":16,"column":12,"nodeType":"150","messageId":"151","endLine":16,"endColumn":24},{"ruleId":"148","severity":1,"message":"155","line":24,"column":19,"nodeType":"150","messageId":"151","endLine":24,"endColumn":27},{"ruleId":"157","severity":1,"message":"158","line":90,"column":37,"nodeType":"159","endLine":90,"endColumn":95},{"ruleId":"157","severity":1,"message":"158","line":95,"column":37,"nodeType":"159","endLine":95,"endColumn":95},{"ruleId":"157","severity":1,"message":"158","line":100,"column":37,"nodeType":"159","endLine":100,"endColumn":95},{"ruleId":"157","severity":1,"message":"158","line":105,"column":37,"nodeType":"159","endLine":105,"endColumn":95},{"ruleId":"144","replacedBy":"160"},{"ruleId":"146","replacedBy":"161"},{"ruleId":"157","severity":1,"message":"162","line":28,"column":21,"nodeType":"159","endLine":28,"endColumn":33},{"ruleId":"157","severity":1,"message":"162","line":32,"column":29,"nodeType":"159","endLine":32,"endColumn":41},{"ruleId":"157","severity":1,"message":"162","line":33,"column":29,"nodeType":"159","endLine":33,"endColumn":41},{"ruleId":"157","severity":1,"message":"162","line":34,"column":29,"nodeType":"159","endLine":34,"endColumn":41},{"ruleId":"157","severity":1,"message":"162","line":35,"column":29,"nodeType":"159","endLine":35,"endColumn":41},{"ruleId":"157","severity":1,"message":"162","line":36,"column":29,"nodeType":"159","endLine":36,"endColumn":41},{"ruleId":"163","severity":1,"message":"164","line":10,"column":13,"nodeType":"159","endLine":10,"endColumn":193},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"148","severity":1,"message":"153","line":18,"column":13,"nodeType":"150","messageId":"151","endLine":18,"endColumn":21},{"ruleId":"148","severity":1,"message":"154","line":20,"column":12,"nodeType":"150","messageId":"151","endLine":20,"endColumn":24},{"ruleId":"148","severity":1,"message":"155","line":28,"column":19,"nodeType":"150","messageId":"151","endLine":28,"endColumn":27},{"ruleId":"148","severity":1,"message":"165","line":1,"column":23,"nodeType":"150","messageId":"151","endLine":1,"endColumn":38},{"ruleId":"148","severity":1,"message":"166","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"148","severity":1,"message":"167","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"168","line":3,"column":16,"nodeType":"150","messageId":"151","endLine":3,"endColumn":24},{"ruleId":"148","severity":1,"message":"169","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":21},{"ruleId":"148","severity":1,"message":"170","line":2,"column":23,"nodeType":"150","messageId":"151","endLine":2,"endColumn":34},{"ruleId":"171","severity":1,"message":"172","line":38,"column":29,"nodeType":"159","endLine":39,"endColumn":56},{"ruleId":"171","severity":1,"message":"172","line":50,"column":29,"nodeType":"159","endLine":51,"endColumn":56},{"ruleId":"157","severity":1,"message":"158","line":63,"column":29,"nodeType":"159","endLine":63,"endColumn":46},{"ruleId":"171","severity":1,"message":"172","line":68,"column":33,"nodeType":"159","endLine":69,"endColumn":60},{"ruleId":"148","severity":1,"message":"173","line":5,"column":11,"nodeType":"150","messageId":"151","endLine":5,"endColumn":19},{"ruleId":"148","severity":1,"message":"174","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":25},{"ruleId":"148","severity":1,"message":"175","line":11,"column":11,"nodeType":"150","messageId":"151","endLine":11,"endColumn":22},{"ruleId":"148","severity":1,"message":"173","line":12,"column":11,"nodeType":"150","messageId":"151","endLine":12,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":16,"column":17,"nodeType":"159","endLine":16,"endColumn":63},{"ruleId":"157","severity":1,"message":"158","line":20,"column":21,"nodeType":"159","endLine":20,"endColumn":52},{"ruleId":"148","severity":1,"message":"176","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":27},{"ruleId":"148","severity":1,"message":"176","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":27},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'appendErrors' is defined but never used.","'register' is assigned a value but never used.","'serverErrors' is assigned a value but never used.","'response' is assigned a value but never used.","'errors' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["177"],["178"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'combineReducers' is defined but never used.","'logger' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'dispatch' is assigned a value but never used.","'useState' is defined but never used.","'userInStore' is assigned a value but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation"]